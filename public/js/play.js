function play(){
  const dbName = "SDB";
  //using JQuery's extend function to copy array value and not the reference
  var navNodes = $.extend(true, [], navDiagram.model.nodeDataArray),
      navLinks = $.extend(true, [], navDiagram.model.linkDataArray),
      pages = [],
      forms = [],
      lists = [],
      scripts = [],
      routes = "",
      queries = "";
  
  queries = createQueries();

  //Divide nodes by category
  for ( var i = 0; i < navNodes.length; i++){
      if ( navNodes[i].category == "MainPage" || navNodes[i].category == "Page" ){
        pages.push(navNodes[i]);
      } else if ( navNodes[i].category == "Form" ){
        forms.push(navNodes[i]);
      } else if ( navNodes[i].category == "List"){
        lists.push(navNodes[i]);
      } else if ( navNodes[i].category == "Script"){
        scripts.push(navNodes[i]);
      }
  }

//Iterate over pages
  for ( var p = 0; p < pages.length; p++ ){
    var pageForms = '',
        pageLists = '',
        pageLinks = '',
        content =  '',
        importScripts = 'block append scripts' + '\n';

    for ( var f = 0; f < forms.length; f++ ){
      //parse forms within group
      if( forms[f].group == pages[p].key ){
        pageForms = pageForms + parseForm(forms[f]) + '\n';
      }
    }

    for ( var l = 0; l < lists.length; l++ ){
      //parse lists within group
       if ( lists[l].group == pages[p].key ){
        pageLists = pageLists + parseList(lists[l]) + '\n';
      }
    };

    for( var k = 0; k < navLinks.length; k++ ){
      //parse links within group
      if(navLinks[k].from == pages[p].key ){
        pageLinks = pageLinks + parseLink(navLinks[k], pages) + '\n';
      }
    };

    for ( var s = 0; s < scripts.length; s++ ){
      //parse lists within group
       if ( scripts[s].group == pages[p].key ){
        createFile(scripts[s].text, scripts[s].name, '../views/rendered/', "script" );
        importScripts = importScripts + "script(src='/"+scripts[s].name+"')" + '\n';
      }
    };  

    content =  pageForms + pageLists + pageLinks;

    //Create jade file

    var fileHeader = "extends ../layout" + '\n';

    if (scripts.length > 0) {
      fileHeader = fileHeader + importScripts;
    };

    var fileContent =
      "block content" + '\n' +
      "  .container-fluid" + '\n' +
      "      div" + '\n' +
      "#{content}" + '\n' +
      "      footer" + '\n' +
      "        p Â© SSWMFA - UNLP 2018";

    var fileTemplate = fileHeader + fileContent;
    var myValues = { content: content };
    var htmlCode = $.tmpl(fileTemplate, myValues);
    var fileName = pages[p].name;
    fileName = fileName.toLowerCase().split(" ").join("_");
    fileNameToSaveAs = fileName + ".jade"

    //call function to create html file
    createFile(htmlCode, fileNameToSaveAs,'../views/rendered/', "jade");

    //Create router for the new file
    var getLine = "router.get('/#{name}', function(req, res) {";
    if (pages[p].category == "MainPage"){ // For MainPage we set the route to '/'
      getLine = "router.get('/', function (req, res) {";
    };

    var routerTemplate = getLine + '\n' +
    "  res.render('rendered/#{name}', { title: '#{pageName}' });"+ '\n' +
    "});"+ '\n';

    var routerValues = { name: fileName, pageName: pages[p].name };
    var route = $.tmpl(routerTemplate, routerValues);
    routes = routes + route

  }

  //Create DB file
  var dbConfigTemplate = 
  "var sqlite3 = require('sqlite3').verbose(),"+ '\n' +
  "db = new sqlite3.Database('sswmfa'),"+ '\n' +
  '#{dbName} = {};'+ '\n' +
  '#{queries}'+ '\n' +
  'module.exports = #{dbName};' + '\n';

  var dbConfigValues = { queries: queries, dbName: dbName };
  var dbConfigContent = $.tmpl(dbConfigTemplate, dbConfigValues);

  createFile(dbConfigContent, "db.js", '../models/', "script" );


  //Create render.js file which contains routes to the new files and gateways 
  var routerContentTemplate = 
  "var express = require('express');" + '\n' +
  "var router = express.Router();" + '\n' +
  "var #{dbName} = require('../models/db');" + '\n' +
  "//below autogenerated routes" + '\n' +
  "#{routes}"+ '\n' +
  "module.exports = router;"+ '\n';

  var routerContentValues = { routes: routes, dbName: dbName };
  var routerContent = $.tmpl(routerContentTemplate, routerContentValues);
  //call function to create router for render
  createFile(routerContent, "render.js", '../routes/', "script" );

  //open tab index
  window.open(
    'http://localhost:3000/render',
    '_blank'
  );
}

function createFile(fileContent, fileName, dir, dataType ){
  var data = {};
  data.fileContent = fileContent;
  data.fileName = fileName
  data.dir = dir

  $.ajax({
    type: 'POST',
    dataType: dataType,
    data: JSON.stringify(data),
    contentType: "application/json; charset=utf-8",
    url: 'http://localhost:3000/createFile',
    converters: {
      'text json': true
    },
    success: function(data) {
      console.log('success')
    }
  });
}

function createQueries(){
  return " ";
}